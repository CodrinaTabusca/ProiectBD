-- Generated by Oracle SQL Developer Data Modeler 23.1.0.087.0806
--   at:        2024-12-08 16:02:13 EET
--   site:      Oracle Database 12c
--   type:      Oracle Database 12c



-- predefined type, no DDL - MDSYS.SDO_GEOMETRY

-- predefined type, no DDL - XMLTYPE

CREATE TABLE album (
    id_album    NUMBER(3)
        GENERATED BY DEFAULT AS IDENTITY ( START WITH 1 NOCACHE ORDER )
    NOT NULL,
    tip_album   VARCHAR2(6) NOT NULL,
    titlu_album VARCHAR2(20) NOT NULL,
    stoc        NUMBER(3) NOT NULL,
    id_artist   NUMBER(3) NOT NULL
)
LOGGING;

ALTER TABLE album
    ADD CONSTRAINT album_id_album_ck CHECK ( REGEXP_LIKE ( id_album,
                                                           '^\d{1,3}$' ) );

ALTER TABLE album
    ADD CONSTRAINT album_tip_album_ck CHECK ( REGEXP_LIKE ( tip_album,
                                                            '^(CD|vinyl)$' ) );

ALTER TABLE album ADD CONSTRAINT album_stoc_ck CHECK ( stoc >= 0 );

ALTER TABLE album ADD CONSTRAINT album_pk PRIMARY KEY ( id_album );

CREATE TABLE artisti (
    nume_artist   VARCHAR2(50) NOT NULL,
    id_artist     NUMBER(3)
        GENERATED BY DEFAULT AS IDENTITY ( START WITH 100 NOCACHE ORDER )
    NOT NULL,
    data_nasterii DATE
)
LOGGING;

ALTER TABLE artisti
    ADD CONSTRAINT artisti_nume_artist_ck CHECK ( REGEXP_LIKE ( nume_artist,
                                                                '[A-Z][a-z]{2,29} [A-Z][a-z]{2,29}$' ) );

ALTER TABLE artisti
    ADD CONSTRAINT artisti_id_artist_ck CHECK ( REGEXP_LIKE ( id_artist,
                                                              '^\d{1,3}$' ) );

ALTER TABLE artisti ADD CONSTRAINT artisti_pk PRIMARY KEY ( id_artist );

CREATE TABLE clienti (
    id_client   NUMBER(3)
        GENERATED BY DEFAULT AS IDENTITY ( START WITH 300 NOCACHE ORDER )
    NOT NULL,
    nume_client VARCHAR2(50) NOT NULL,
    email       VARCHAR2(25),
    telefon     VARCHAR2(10)
)
LOGGING;

ALTER TABLE clienti
    ADD CONSTRAINT clienti_id_client_ck CHECK ( REGEXP_LIKE ( id_client,
                                                              '^\d{1,3}$' ) );

ALTER TABLE clienti
    ADD CONSTRAINT clienti_nume_client_ck CHECK ( REGEXP_LIKE ( nume_client,
                                                                '[A-Z][a-z]{2,29} [A-Z][a-z]{2,29}$' ) );

ALTER TABLE clienti
    ADD CONSTRAINT clienti_email_ck CHECK ( REGEXP_LIKE ( email,
                                                          '[a-z0-9._%-]+@[a-z0-9._%-]+\.[a-z]{2,4}' ) );

ALTER TABLE clienti
    ADD CONSTRAINT clienti_telefon_ck CHECK ( REGEXP_LIKE ( telefon,
                                                            '^\d{10}$' ) );

ALTER TABLE clienti ADD CONSTRAINT clienti_pk PRIMARY KEY ( id_client );

ALTER TABLE clienti ADD CONSTRAINT clienti_email_nume_client_un UNIQUE ( email,
                                                                         nume_client );

CREATE TABLE detalii_album (
    data_lansare DATE,
    pret         NUMBER(3) NOT NULL,
    id_album     NUMBER(3) NOT NULL
)
LOGGING;

ALTER TABLE detalii_album
    ADD CONSTRAINT detalii_album_pret_ck CHECK ( pret BETWEEN 50 AND 200 );

CREATE UNIQUE INDEX detalii_album__idx ON
    detalii_album (
        id_album
    ASC )
        LOGGING;

CREATE TABLE piese (
    id_piesa    NUMBER(3)
        GENERATED BY DEFAULT AS IDENTITY ( START WITH 200 NOCACHE ORDER )
    NOT NULL,
    titlu_piesa VARCHAR2(20) NOT NULL,
    id_album    NUMBER(3) NOT NULL,
    id_artist   NUMBER(3) NOT NULL
)
LOGGING;

ALTER TABLE piese
    ADD CONSTRAINT piese_id_piesa_ck CHECK ( REGEXP_LIKE ( id_piesa,
                                                           '^\d{1,3}$' ) );

ALTER TABLE piese ADD CONSTRAINT piese_pk PRIMARY KEY ( id_piesa );

CREATE TABLE vanzari (
    id_album       NUMBER(3) NOT NULL,
    id_client      NUMBER(3) NOT NULL,
    data_cumparare DATE NOT NULL,
    cantitate      NUMBER NOT NULL
)
LOGGING;

ALTER TABLE vanzari ADD CONSTRAINT vanzari_pk PRIMARY KEY ( id_album,
                                                            id_client );

ALTER TABLE album
    ADD CONSTRAINT album_artisti_fk FOREIGN KEY ( id_artist )
        REFERENCES artisti ( id_artist )
    NOT DEFERRABLE;

ALTER TABLE detalii_album
    ADD CONSTRAINT detalii_album_album_fk FOREIGN KEY ( id_album )
        REFERENCES album ( id_album )
    NOT DEFERRABLE;

ALTER TABLE piese
    ADD CONSTRAINT piese_album_fk FOREIGN KEY ( id_album )
        REFERENCES album ( id_album )
    NOT DEFERRABLE;

ALTER TABLE piese
    ADD CONSTRAINT piese_artisti_fk FOREIGN KEY ( id_artist )
        REFERENCES artisti ( id_artist )
    NOT DEFERRABLE;

ALTER TABLE vanzari
    ADD CONSTRAINT vanzari_album_fk FOREIGN KEY ( id_album )
        REFERENCES album ( id_album )
    NOT DEFERRABLE;

ALTER TABLE vanzari
    ADD CONSTRAINT vanzari_clienti_fk FOREIGN KEY ( id_client )
        REFERENCES clienti ( id_client )
    NOT DEFERRABLE;

CREATE OR REPLACE TRIGGER trg_artisti_data_nasterii 
    BEFORE INSERT OR UPDATE ON artisti 
    FOR EACH ROW 
BEGIN
	IF( :new.data_nasterii >=ADD_MONTHS(SYSDATE, -14*12) )
	THEN
		RAISE_APPLICATION_ERROR( -20001,
			'Data invalida: ' || TO_CHAR( :new.data_nasterii, 'DD.MM.YYY HH24:MI:SS' ) || ' trebuie sa fie mai mare decat data curenta.' );
	END IF;
END ;
/

CREATE OR REPLACE TRIGGER trg_detalii_alb_data_lansare 
    BEFORE INSERT OR UPDATE ON detalii_album 
    FOR EACH ROW 
BEGIN
	IF( :new.data_lansare >=SYSDATE )
	THEN
		RAISE_APPLICATION_ERROR( -20001,
			'Data invalida: ' || TO_CHAR( :new.data_lansare, 'DD.MM.YYY HH24:MI:SS' ) || ' trebuie sa fie mai mare decat data curenta.' );
	END IF;
END ;
/

CREATE OR REPLACE TRIGGER trg_vanzari_data_cumparare 
    BEFORE INSERT OR UPDATE ON vanzari 
    FOR EACH ROW 
BEGIN
	IF( :new.data_cumparare >=SYSDATE )
	THEN
		RAISE_APPLICATION_ERROR( -20001,
			'Data invalida: ' || TO_CHAR( :new.data_cumparare, 'DD.MM.YYY HH24:MI:SS' ) || ' trebuie sa fie mai mare decat data curenta.' );
	END IF;
END ;
/



-- Oracle SQL Developer Data Modeler Summary Report: 
-- 
-- CREATE TABLE                             6
-- CREATE INDEX                             1
-- ALTER TABLE                             23
-- CREATE VIEW                              0
-- ALTER VIEW                               0
-- CREATE PACKAGE                           0
-- CREATE PACKAGE BODY                      0
-- CREATE PROCEDURE                         0
-- CREATE FUNCTION                          0
-- CREATE TRIGGER                           3
-- ALTER TRIGGER                            0
-- CREATE COLLECTION TYPE                   0
-- CREATE STRUCTURED TYPE                   0
-- CREATE STRUCTURED TYPE BODY              0
-- CREATE CLUSTER                           0
-- CREATE CONTEXT                           0
-- CREATE DATABASE                          0
-- CREATE DIMENSION                         0
-- CREATE DIRECTORY                         0
-- CREATE DISK GROUP                        0
-- CREATE ROLE                              0
-- CREATE ROLLBACK SEGMENT                  0
-- CREATE SEQUENCE                          0
-- CREATE MATERIALIZED VIEW                 0
-- CREATE MATERIALIZED VIEW LOG             0
-- CREATE SYNONYM                           0
-- CREATE TABLESPACE                        0
-- CREATE USER                              0
-- 
-- DROP TABLESPACE                          0
-- DROP DATABASE                            0
-- 
-- REDACTION POLICY                         0
-- TSDP POLICY                              0
-- 
-- ORDS DROP SCHEMA                         0
-- ORDS ENABLE SCHEMA                       0
-- ORDS ENABLE OBJECT                       0
-- 
-- ERRORS                                   0
-- WARNINGS                                 0
